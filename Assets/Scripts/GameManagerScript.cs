using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class GameManagerScript : MonoBehaviour {

    //global variables
    private double playerScore;                   //the player's current score
    public double autoGenScoreIncrease;           //the amount score is increased when the autogenerated score increase runs
    public double clickScoreIncrease;             //the amount score is increased on a click event
    public double clickPercentScoreIncrease;      //the percentage of autoGenScoreIncrease gained per click
    private int ticker;                           //incremented by 1 every frame, when larger than autoGenScoreRate reset it to 0 and increase score by autoGenScoreIncrease
    private static int ticksPerSecond = 60;       //amount of ticks in 1 second
    private int rate;                             //amount of ticks needed for autogen
    private int ratesHit;                         //used to avoid issues of rate being almost every frame
    private float lastSaved;
    private double totalScore = 0;

    //list of click researches, uses the base threshold of the item to determine if you've gotten enough total score to see
    public List<UpgradeScript> clickResearches = new List<UpgradeScript>();

    //text display score
    public Text objText;

    //Lists referencing the manager class for each upgrade
    public List<UpgradeScript> upgrades = new List<UpgradeScript>();    //upgrades that increment score every second

    //flags for updating score values
    public bool autoGenFlag = false;
    public bool clickFlag = false;

    //getters and setters
    public double PlayerScore
    {
        get { return System.Math.Round(playerScore, 1); }
        set { playerScore = value; }
    }

    public double TotalScore
    {
        get { return System.Math.Round(totalScore, 1); }
    }

    // Use this for initialization
    void Start () {
        //initialize Game Manager's variables
        playerScore = 0;
        ticker = 0;
        rate = 60;
        ratesHit = 0;
        clickPercentScoreIncrease = 0;
        //autoGenScoreIncrease = 0;
        //clickScoreIncrease = 0;
        lastSaved = Time.time;
        if(PlayerPrefs.GetFloat("score") != 0)
        {
            playerScore = PlayerPrefs.GetFloat("score");
            objText.text = PlayerScore.ToString();
        }
	}
	
	// Update is called once per frame
	void Update () {
        //increment tickers
        ticker++;

        //display player score
        objText.text = PlayerScore.ToString();

        //update click score if new upgrades were bought
        //not deleting bc we can still use this for researches
        if (clickFlag)
        {
            clickScoreIncrease = 1;
            foreach (UpgradeScript c in clickResearches)
            {
                clickScoreIncrease += c.GetValue();
            }

            clickFlag = false;
        }

        //if rate of increase had passed, set it up so score added on autogen is increased by more
        if (ticker % rate == 0)
        {
            ratesHit++;
        }

        //if a second has passed, increase score by autogen amount
        if (ticker % ticksPerSecond == 0)
        {
            UpdateAutoGenScore();
        }

        if (Time.time - lastSaved >= 180)
        {
            SaveData();
        }
	}

    //increase player's score by the autoGenScoreIncrease value
    private void UpdateAutoGenScore()
    {
        if(autoGenFlag)
        {
            autoGenScoreIncrease = 0;

            foreach (UpgradeScript u in upgrades)
            {
                autoGenScoreIncrease += u.GetValue();
            }

            autoGenFlag = false;
        }

        playerScore += (autoGenScoreIncrease * ratesHit);
        totalScore += (autoGenScoreIncrease * ratesHit);
        ratesHit = 0;
    }

    //increase player's score by the autoGenScoreIncrease value
    public void UpdateAutoGenRate(int upgradeValue)
    {
        rate -= upgradeValue;
        if (rate < 1)
        {
            rate = 1;
        }
    }

    public void SaveData()
    {
        Debug.Log("Saving");

        PlayerPrefs.SetFloat("score", (float)playerScore);
        PlayerPrefs.SetFloat("totalScore", (float)totalScore);
        PlayerPrefs.Save();
    }

    //decrease player score for whatever reason.
    public void DecreaseScore(double decVal)
    {
        playerScore -= decVal;
    }

    //increase player's score by the clickScoreIncrease value
    public void ClickScoreIncrease()
    {

        playerScore += clickScoreIncrease + (clickPercentScoreIncrease * autoGenScoreIncrease);
        totalScore += clickScoreIncrease + (clickPercentScoreIncrease * autoGenScoreIncrease);
    }

    public void toMenu()
    {
        SceneManager.LoadScene("MainMenu");
    }
}
